language: java
os: linux
dist: bionic

jobs:
  include:

    - name: Development build with JDK 9
      jdk: openjdk9
      install: true
      script:
        - mvn clean install -P dev -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: Release build with JDK 8 + 11
      jdk: openjdk8
      install:
        - ln -s ${JAVA_HOME} /home/travis/jdk8
        - wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
        - source ./install-jdk.sh --feature 11 --target /home/travis/jdk11
      script:
        - mvn clean install -P release -t .travis-toolchains.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: Tests on Android
      jdk: openjdk8
      env:
        - ANDROID_TOOLS=4333796
        - ANDROID_SDK_VERSION=29
        - ANDROID_BUILD_TOOLS_VERSION=29.0.3
        - ANDROID_HOME=$HOME/android-sdk
        - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
      before_install:
        - sudo apt-get install -y --no-install-recommends bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null
        - sudo apt-get install -y libxtst6 libnss3-dev libnspr4 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libgdk-pixbuf2.0-0 > /dev/null
        - sudo adduser $USER libvirt
        - sudo adduser $USER kvm
        - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_TOOLS}.zip" -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - wget -q "https://raw.githubusercontent.com/mmcc007/test_emulators/master/script/android-wait-for-emulator.sh" -O android-wait-for-emulator
        - chmod +x android-wait-for-emulator tinylog-android-test/gradlew
        - touch $HOME/.android/repositories.cfg
        - yes | sdkmanager --licenses > /dev/null
      install:
        - sdkmanager "platform-tools" > /dev/null
        - sdkmanager "tools" > /dev/null
        - sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" > /dev/null
        - sdkmanager "platforms;android-${ANDROID_SDK_VERSION}" > /dev/null
        - sdkmanager "extras;android;m2repository" > /dev/null
        - sdkmanager "system-images;android-${ANDROID_SDK_VERSION};default;x86" > /dev/null
        - sdkmanager "emulator" > /dev/null
        - echo no | avdmanager create avd --force -n test -k "system-images;android-${ANDROID_SDK_VERSION};default;x86"
      before_script:
        - sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/emulator -avd test -no-window -no-audio &"
        - ./android-wait-for-emulator
      script:
        - cd tinylog-android-test
        - TERM=dumb ./gradlew createDebugCoverageReport -Dorg.gradle.daemon=false

after_success:
  - bash <(curl -s https://codecov.io/bash)

before_cache:
  - rm -rf $HOME/.m2/repository/org/tinylog/
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
    - $HOME/.android/build-cache
    - $HOME/.gradle/caches
    - $HOME/.gradle/wrapper
    - $HOME/.m2
